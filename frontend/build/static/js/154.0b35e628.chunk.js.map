{"version":3,"file":"static/js/154.0b35e628.chunk.js","mappings":"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","sources":["components/Footer.jsx","components/Home.jsx"],"sourcesContent":["import React from \"react\";\r\nimport \"../styles/Footer.css\"; // Import the CSS file\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <footer className=\"footer\">\r\n      <div className=\"container\">\r\n        <div className=\"col-md-4 d-flex align-items-center\">\r\n          <a href=\"/\" className=\"footer-logo\">\r\n            <svg className=\"bi\" width=\"30\" height=\"24\">\r\n              <use xlinkHref=\"#bootstrap\"></use>\r\n            </svg>\r\n          </a>\r\n          <span className=\"footer-text\">\r\n            Â© {new Date().getFullYear()} PersBlog\r\n          </span>\r\n        </div>\r\n      </div>\r\n    </footer>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport {\r\n  Container,\r\n  Button,\r\n  Grid,\r\n  Card,\r\n  CardContent,\r\n  Typography,\r\n  Alert,\r\n  CircularProgress,\r\n} from \"@mui/material\";\r\nimport Footer from \"./Footer\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport \"../styles/Home.css\";\r\n\r\nconst Home = ({ isAdmin }) => {\r\n  const [posts, setPosts] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const navigate = useNavigate();\r\n\r\n  const defaultPost = {\r\n    id: \"default\",\r\n    title: \"Temporary Post\",\r\n    content:\r\n      \"Due to an error fetching the posts, you are only seeing this default post. Please try again later.\",\r\n    posted_at: new Date().toISOString(),\r\n    author: \"PersBlog\",\r\n  };\r\n\r\n  const fetchPosts = async () => {\r\n    try {\r\n      const response = await axios.get(\"http://localhost:4000/api/posts\");\r\n      setPosts(response.data);\r\n    } catch (error) {\r\n      console.error(\"Error fetching posts:\", error);\r\n      setError(\"Failed to load posts. Please try again later.\");\r\n      setPosts([defaultPost]);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchPosts();\r\n  }, []);\r\n\r\n  const handleCreatePost = () => {\r\n    if (!isAdmin) {\r\n      alert(\"Only authorized users can create a post.\");\r\n    } else {\r\n      navigate(\"/create-post\");\r\n    }\r\n  };\r\n\r\n  const handleEditPost = (postId) => {\r\n    navigate(`/edit-post/${postId}`);\r\n  };\r\n\r\n  const handleViewPost = (postId) => {\r\n    navigate(`/post-view/${postId}`);\r\n  };\r\n\r\n  const handleDeletePost = async (postId) => {\r\n    if (window.confirm(\"Are you sure you want to delete this post?\")) {\r\n      try {\r\n        setPosts(\r\n          posts.map((post) =>\r\n            post.id === postId ? { ...post, deleting: true } : post\r\n          )\r\n        );\r\n        await axios.delete(`http://localhost:4000/api/posts/${postId}`);\r\n        setPosts(posts.filter((post) => post.id !== postId));\r\n      } catch (error) {\r\n        console.error(\"Error deleting post:\", error);\r\n        setError(\"Failed to delete the post. Please try again.\");\r\n      }\r\n    }\r\n  };\r\n\r\n  const formatDate = (dateString) => {\r\n    const options = {\r\n      year: \"numeric\",\r\n      month: \"long\",\r\n      day: \"numeric\",\r\n      hour: \"numeric\",\r\n      minute: \"numeric\",\r\n    };\r\n    return new Date(dateString).toLocaleDateString(undefined, options);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Container className=\"container-title\">\r\n        <Typography variant=\"h4\" align=\"center\" gutterBottom>\r\n          Explore the Latest Posts\r\n        </Typography>\r\n        <Typography variant=\"h6\" align=\"center\" gutterBottom>\r\n          Welcome to the blog! Here are my thoughts and posts.\r\n        </Typography>\r\n\r\n        {error && (\r\n          <Alert severity=\"error\" sx={{ textAlign: \"center\" }}>\r\n            {error}\r\n          </Alert>\r\n        )}\r\n\r\n        {isAdmin && (\r\n          <div style={{ textAlign: \"center\", marginBottom: \"16px\" }}>\r\n            <Button\r\n              variant=\"contained\"\r\n              className=\"create-post-btn\"\r\n              onClick={handleCreatePost}\r\n            >\r\n              Create New Post\r\n            </Button>\r\n          </div>\r\n        )}\r\n\r\n        {loading ? (\r\n          <div style={{ textAlign: \"center\", margin: \"40px 0\" }}>\r\n            <CircularProgress />\r\n          </div>\r\n        ) : (\r\n          <Grid container spacing={3}>\r\n            {posts.length > 0 ? (\r\n              posts.map((post) => (\r\n                <Grid item xs={12} sm={6} md={4} key={post.id}>\r\n                  <Card className=\"card-body-bg\">\r\n                    <div className=\"card-top-title\">\r\n                      <Typography\r\n                        variant=\"h5\"\r\n                        align=\"center\"\r\n                        onClick={() => handleViewPost(post.id)}\r\n                        className=\"card-title\"\r\n                      >\r\n                        {post.title}\r\n                      </Typography>\r\n                    </div>\r\n                    <CardContent className=\"card-content-limited\">\r\n                      <Typography variant=\"body2\" color=\"textSecondary\">\r\n                        {post.content\r\n                          ? post.content.substring(0, 100) + \"...\"\r\n                          : \"No content available\"}\r\n                      </Typography>\r\n                      <Typography\r\n                        variant=\"body2\"\r\n                        color=\"primary\"\r\n                        onClick={() => handleViewPost(post.id)}\r\n                        className=\"card-read-more\"\r\n                      >\r\n                        Read More\r\n                      </Typography>\r\n                      <div\r\n                        style={{\r\n                          display: \"flex\",\r\n                          justifyContent: \"space-between\",\r\n                          alignItems: \"center\",\r\n                          padding: \"8px 0\",\r\n                        }}\r\n                      >\r\n                        {isAdmin && (\r\n                          <>\r\n                            <Button\r\n                              size=\"small\"\r\n                              className=\"btn-edit\"\r\n                              onClick={() => handleEditPost(post.id)}\r\n                              variant=\"outlined\"\r\n                            >\r\n                              Edit\r\n                            </Button>\r\n\r\n                            <Button\r\n                              size=\"small\"\r\n                              className=\"btn-delete\"\r\n                              onClick={() => handleDeletePost(post.id)}\r\n                              disabled={post.deleting}\r\n                              variant=\"outlined\"\r\n                            >\r\n                              {post.deleting ? \"Deleting...\" : \"Delete\"}\r\n                            </Button>\r\n                          </>\r\n                        )}\r\n                      </div>\r\n                      <Typography\r\n                        variant=\"caption\"\r\n                        color=\"textSecondary\"\r\n                        className=\"post-date\"\r\n                      >\r\n                        {formatDate(post.posted_at)}\r\n                      </Typography>\r\n                      <br />\r\n                      <Typography\r\n                        variant=\"caption\"\r\n                        color=\"textSecondary\"\r\n                        className=\"post-author\"\r\n                      >\r\n                        Author: {post.author || \"Ashik Ibrahim\"}\r\n                      </Typography>\r\n                    </CardContent>\r\n                  </Card>\r\n                </Grid>\r\n              ))\r\n            ) : (\r\n              <Alert severity=\"info\" sx={{ textAlign: \"center\" }}>\r\n                No posts available\r\n              </Alert>\r\n            )}\r\n          </Grid>\r\n        )}\r\n      </Container>\r\n\r\n      <Footer />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n"],"names":["Footer","_jsx","className","children","_jsxs","href","width","height","xlinkHref","Date","getFullYear","_ref","isAdmin","posts","setPosts","useState","loading","setLoading","error","setError","navigate","useNavigate","defaultPost","id","title","content","posted_at","toISOString","author","useEffect","async","response","axios","get","data","console","fetchPosts","handleViewPost","postId","_Fragment","Container","Typography","variant","align","gutterBottom","Alert","severity","sx","textAlign","style","marginBottom","Button","onClick","handleCreatePost","alert","margin","CircularProgress","Grid","container","spacing","length","map","post","item","xs","sm","md","Card","CardContent","color","substring","display","justifyContent","alignItems","padding","size","handleEditPost","window","confirm","deleting","delete","filter","handleDeletePost","disabled","dateString","toLocaleDateString","undefined","year","month","day","hour","minute"],"sourceRoot":""}